amcl:
  ros__parameters:
    use_sim_time: false  # Use simulation time (true) or real time (false). Default: false
    alpha1: 0.1  # Odometry model noise. Default: 0.2
    alpha2: 0.1  # Odometry model noise. Default: 0.2
    alpha3: 0.1  # Odometry model noise. Default: 0.2
    alpha4: 0.1  # Odometry model noise. Default: 0.2
    #alpha5: 0.1  # Odometry model noise. Default: 0.2
    base_frame_id: "base_footprint"  # The frame ID of the robot base. Default: "base_footprint"
    beam_skip_distance: 0.5  # Distance to skip beams. Default: 0.5
    beam_skip_error_threshold: 0.9  # Error threshold for beam skipping. Default: 0.9
    beam_skip_threshold: 0.3  # Threshold for beam skipping. Default: 0.3
    do_beamskip: false  # Enable beam skipping. Default: false
    global_frame_id: "map"  # The frame ID of the global map. Default: "map"
    lambda_short: 0.1  # The exponential distribution parameter for short beams. Default: 0.1
    laser_likelihood_max_dist: 2.0  # Maximum distance for laser likelihood field model. Default: 2.0
    laser_max_range: -1.0  # Maximum range of the laser. Default: 100.0
    laser_min_range: -1.0  # Minimum range of the laser. Default: -1.0
    laser_model_type: "likelihood_field"  # The type of laser model to use. Default: "likelihood_field"
    max_beams: 60  # Maximum number of beams to use for AMCL. Default: 60
    max_particles: 2000  # Maximum number of particles for AMCL. Default: 2000
    min_particles: 500  # Minimum number of particles for AMCL. Default: 500
    odom_frame_id: "odom"  # The frame ID of the odometry frame. Default: "odom"
    pf_err: 0.05  # Error threshold for the particle filter. Default: 0.05
    pf_z: 0.99  # Likelihood threshold for resampling particles. Default: 0.99
    recovery_alpha_fast: 0.1  # Recovery alpha fast parameter for AMCL. Default: 0.0
    recovery_alpha_slow: 0.001  # Recovery alpha slow parameter for AMCL. Default: 0.0
    resample_interval: 1  # Interval for resampling particles. Default: 1
    robot_model_type: "nav2_amcl::DifferentialMotionModel"  # The type of robot motion model. Default: "nav2_amcl::DifferentialMotionModel"
    save_pose_rate: 0.5  # Rate to save the pose to file. Default: 0.5
    sigma_hit: 0.2  # Standard deviation for the hit model. Default: 0.2
    tf_broadcast: true  # Enable TF broadcasting. Default: true
    transform_tolerance: 1.0  # Transform tolerance in seconds. Default: 1.0
    update_min_a: 0.1  # Minimum update angle for AMCL. Default: 0.2
    update_min_d: 0.1  # Minimum update distance for AMCL. Default: 0.25
    z_hit: 0.5  # Weight for the hit part of the laser model. Default: 0.5
    z_max: 0.05  # Weight for the max part of the laser model. Default: 0.05
    z_rand: 0.5  # Weight for the random part of the laser model. Default: 0.5
    z_short: 0.005  # Weight for the short part of the laser model. Default: 0.005
    scan_topic: scan_filtered  # The topic name for incoming laser scans. Default: scan


bt_navigator:
  ros__parameters:
    use_sim_time: false  # Use simulation time (true) or real time (false). Default: false
    global_frame: map  # The global frame ID. Default: "map"
    robot_base_frame: base_link  # The base frame ID of the robot. Default: "base_link"
    odom_topic: /odom  # The topic name for odometry messages. Default: "/odom"
    bt_loop_duration: 10  # Duration of the Behavior Tree loop in milliseconds. Default: 10
    default_server_timeout: 20  # Default server timeout in seconds. Default: 20
    plugin_lib_names:  # List of plugin libraries for Behavior Tree nodes.
      - nav2_compute_path_to_pose_action_bt_node
      - nav2_compute_path_through_poses_action_bt_node
      - nav2_smooth_path_action_bt_node
      - nav2_follow_path_action_bt_node
      - nav2_spin_action_bt_node
      - nav2_wait_action_bt_node
      - nav2_assisted_teleop_action_bt_node
      - nav2_back_up_action_bt_node
      - nav2_drive_on_heading_bt_node
      - nav2_clear_costmap_service_bt_node
      - nav2_is_stuck_condition_bt_node
      - nav2_goal_reached_condition_bt_node
      - nav2_goal_updated_condition_bt_node
      - nav2_globally_updated_goal_condition_bt_node
      - nav2_is_path_valid_condition_bt_node
      - nav2_initial_pose_received_condition_bt_node
      - nav2_reinitialize_global_localization_service_bt_node
      - nav2_rate_controller_bt_node
      - nav2_distance_controller_bt_node
      - nav2_speed_controller_bt_node
      - nav2_truncate_path_action_bt_node
      - nav2_truncate_path_local_action_bt_node
      - nav2_goal_updater_node_bt_node
      - nav2_recovery_node_bt_node
      - nav2_pipeline_sequence_bt_node
      - nav2_round_robin_node_bt_node
      - nav2_transform_available_condition_bt_node
      - nav2_time_expired_condition_bt_node
      - nav2_path_expiring_timer_condition
      - nav2_distance_traveled_condition_bt_node
      - nav2_single_trigger_bt_node
      - nav2_goal_updated_controller_bt_node
      - nav2_navigate_through_poses_action_bt_node
      - nav2_navigate_to_pose_action_bt_node
      - nav2_remove_passed_goals_action_bt_node
      - nav2_planner_selector_bt_node
      - nav2_controller_selector_bt_node
      - nav2_goal_checker_selector_bt_node
      - nav2_controller_cancel_bt_node
      - nav2_path_longer_on_approach_bt_node
      - nav2_wait_cancel_bt_node
      - nav2_spin_cancel_bt_node
      - nav2_back_up_cancel_bt_node
      - nav2_assisted_teleop_cancel_bt_node
      - nav2_drive_on_heading_cancel_bt_node

bt_navigator_navigate_through_poses_rclcpp_node:
  ros__parameters:
    use_sim_time: false  # Use simulation time (true) or real time (false). Default: false

bt_navigator_navigate_to_pose_rclcpp_node:
  ros__parameters:
    use_sim_time: false  # Use simulation time (true) or real time (false). Default: false

controller_server:
  ros__parameters:
    use_sim_time: false  # Use simulation time (true) or real time (false). Default: false
    controller_frequency: 40.0  # Frequency of the controller updates in Hz. Default: 20.0
    min_x_velocity_threshold: 0.001  # Minimum X velocity threshold. Default: 0.0
    min_y_velocity_threshold: 0.5  # Minimum Y velocity threshold. Default: 0.0
    min_theta_velocity_threshold: 0.001  # Minimum angular velocity threshold. Default: 0.0
    failure_tolerance: 0.3  # Tolerance for failure detection. Default: 0.3
    progress_checker_plugin: "progress_checker"  # Plugin for checking progress. Default: "nav2_controller::SimpleProgressChecker"
    goal_checker_plugins: ["general_goal_checker"]  # Plugin for checking goal conditions. Default: "nav2_controller::SimpleGoalChecker"
    controller_plugins: ["FollowPath"]  # List of controller plugins. Default: ["dwb_core::DWBLocalPlanner"]

    # Progress checker parameters
    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"  # Plugin for checking progress. Default: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.5  # Required movement radius in meters. Default: 0.5
      movement_time_allowance: 10.0  # Time allowance for movement in seconds. Default: 10.0

    # Goal checker parameters
    general_goal_checker:
      stateful: True  # Whether to use stateful goal checking. Default: True
      plugin: "nav2_controller::SimpleGoalChecker"  # Plugin for checking goals. Default: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.25  # XY goal tolerance in meters. Default: 0.25
      yaw_goal_tolerance: 0.25  # Yaw goal tolerance in radians. Default: 0.25

    # DWB parameters
    FollowPath:
      plugin: "dwb_core::DWBLocalPlanner"  # Plugin for the DWB local planner. Default: "dwb_core::DWBLocalPlanner"
      debug_trajectory_details: True  # Whether to debug trajectory details. Default: false
      min_vel_x: 0.0  # Minimum X velocity. Default: 0.0
      min_vel_y: 0.0  # Minimum Y velocity. Default: 0.0
      max_vel_x: 0.26  # Maximum X velocity. Default: 0.26
      max_vel_y: 0.0  # Maximum Y velocity. Default: 0.0
      max_vel_theta: 1.0  # Maximum angular velocity. Default: 1.0
      min_speed_xy: 0.0  # Minimum XY speed. Default: 0.0
      max_speed_xy: 0.26  # Maximum XY speed. Default: 0.26
      min_speed_theta: 0.0  # Minimum angular speed. Default: 0.0
      acc_lim_x: 2.5  # X acceleration limit. Default: 2.5
      acc_lim_y: 0.0  # Y acceleration limit. Default: 0.0
      acc_lim_theta: 3.2  # Angular acceleration limit. Default: 3.2
      decel_lim_x: -2.5  # X deceleration limit. Default: -2.5
      decel_lim_y: 0.0  # Y deceleration limit. Default: 0.0
      decel_lim_theta: -3.2  # Angular deceleration limit. Default: -3.2
      vx_samples: 20  # Number of velocity samples in X direction. Default: 20
      vy_samples: 5  # Number of velocity samples in Y direction. Default: 5
      vtheta_samples: 20  # Number of velocity samples in angular direction. Default: 20
      sim_time: 1.7  # Simulation time in seconds. Default: 1.0
      linear_granularity: 0.05  # Granularity for linear motion in meters. Default: 0.05
      angular_granularity: 0.025  # Granularity for angular motion in radians. Default: 0.025
      transform_tolerance: 10.0  # Transform tolerance in seconds. Default: 0.5
      xy_goal_tolerance: 0.25  # XY goal tolerance in meters. Default: 0.25
      trans_stopped_velocity: 0.25  # Threshold for considering the robot stopped in translational velocity. Default: 0.1
      short_circuit_trajectory_evaluation: True  # Whether to short-circuit trajectory evaluation. Default: false
      stateful: True  # Whether the planner should be stateful. Default: true
      critics: ["RotateToGoal", "Oscillation", "BaseObstacle", "GoalAlign", "PathAlign", "PathDist", "GoalDist"]  # List of trajectory critics. Default: ["RotateToGoal", "Oscillation", "BaseObstacle", "GoalAlign", "PathAlign", "PathDist", "GoalDist"]
      BaseObstacle.scale: 0.02  # Scaling factor for the BaseObstacle critic. Default: 0.0
      PathAlign.scale: 32.0  # Scaling factor for the PathAlign critic. Default: 32.0
      PathAlign.forward_point_distance: 0.1  # Forward point distance for PathAlign critic in meters. Default: 0.1
      GoalAlign.scale: 24.0  # Scaling factor for the GoalAlign critic. Default: 24.0
      GoalAlign.forward_point_distance: 0.1  # Forward point distance for GoalAlign critic in meters. Default: 0.1
      PathDist.scale: 32.0  # Scaling factor for the PathDist critic. Default: 32.0
      GoalDist.scale: 24.0  # Scaling factor for the GoalDist critic. Default: 24.0
      RotateToGoal.scale: 32.0  # Scaling factor for the RotateToGoal critic. Default: 32.0
      RotateToGoal.slowing_factor: 5.0  # Slowing factor for RotateToGoal critic. Default: 5.0
      RotateToGoal.lookahead_time: -1.0  # Lookahead time for RotateToGoal critic in seconds. Default: -1.0

local_costmap:
  local_costmap:
    ros__parameters:
      update_frequency: 10.0  # Frequency to update the local costmap in Hz. Default: 5.0
      publish_frequency: 4.0  # Frequency to publish the local costmap in Hz. Default: 2.0
      global_frame: odom  # The frame ID of the global frame. Default: "odom"
      robot_base_frame: base_link  # The frame ID of the robot base. Default: "base_link"
      use_sim_time: false  # Use simulation time (true) or real time (false). Default: false
      rolling_window: true  # Whether to use a rolling window for the local costmap. Default: true
      width: 3  # Width of the local costmap in meters. Default: 10.0
      height: 3  # Height of the local costmap in meters. Default: 10.0
      resolution: 0.05  # Resolution of the local costmap in meters per cell. Default: 0.05
      footprint: "[[-.178, .533], [-.178, -.533], [.9, -.533], [.9, .533]]"  # The robot footprint in the local costmap. Default: "[]"
      plugins: ["voxel_layer", "inflation_layer"]  # List of plugins for the local costmap. Default: ["static_layer", "obstacle_layer", "inflation_layer"]
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"  # Plugin for the inflation layer. Default: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 3.0  # Cost scaling factor for inflation layer. Default: 10.0
        inflation_radius: 0.55  # Inflation radius in meters. Default: 0.55
      voxel_layer:
        plugin: "nav2_costmap_2d::VoxelLayer"  # Plugin for the voxel layer. Default: "nav2_costmap_2d::VoxelLayer"
        enabled: True  # Whether the voxel layer is enabled. Default: true
        publish_voxel_map: True  # Whether to publish the voxel map. Default: false
        origin_z: 0.0  # Origin Z coordinate for the voxel layer in meters. Default: 0.0
        z_resolution: 0.05  # Resolution in the Z direction for the voxel layer in meters. Default: 0.2
        z_voxels: 16  # Number of voxels in the Z direction. Default: 10
        max_obstacle_height: 2.0  # Maximum obstacle height in meters. Default: 2.0
        mark_threshold: 0  # Threshold for marking obstacles. Default: 0
        observation_sources: scan  # List of observation sources for the voxel layer. Default: "pointcloud"
        scan:
          topic: /scan_filtered  # The topic name for incoming laser scans. Default: scan
          max_obstacle_height: 2.0  # Maximum obstacle height in meters. Default: 2.0
          clearing: True  # Whether to clear obstacles. Default: true
          marking: True  # Whether to mark obstacles. Default: true
          data_type: "LaserScan"  # Type of data for the observation source. Default: "LaserScan"
          raytrace_max_range: 25.0  # Maximum range for raytracing in meters. Default: 30.0
          raytrace_min_range: 0.0  # Minimum range for raytracing in meters. Default: 0.0
          obstacle_max_range: 25.0  # Maximum range for obstacle detection in meters. Default: 2.5
          obstacle_min_range: 0.0  # Minimum range for obstacle detection in meters. Default: 0.0
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"  # Plugin for the static layer. Default: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: True  # Whether to use transient local subscription for the static layer. Default: false
      always_send_full_costmap: True  # Whether to always send the full costmap. Default: false

global_costmap:
  global_costmap:
    ros__parameters:
      update_frequency: 2.0  # Frequency to update the global costmap in Hz. Default: 1.0
      publish_frequency: 2.0  # Frequency to publish the global costmap in Hz. Default: 1.0
      global_frame: map  # The frame ID of the global frame. Default: "map"
      robot_base_frame: base_link  # The frame ID of the robot base. Default: "base_link"
      use_sim_time: false  # Use simulation time (true) or real time (false). Default: false
      footprint: "[[-.178, .533], [-.178, -.533], [.9, -.533], [.9, .533]]"  # The robot footprint in the global costmap. Default: "[]"
      resolution: 0.05  # Resolution of the global costmap in meters per cell. Default: 0.05
      track_unknown_space: true  # Whether to track unknown space in the global costmap. Default: false
      plugins: ["static_layer", "obstacle_layer", "inflation_layer"]  # List of plugins for the global costmap. Default: ["static_layer", "obstacle_layer", "inflation_layer"]
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"  # Plugin for the obstacle layer. Default: "nav2_costmap_2d::ObstacleLayer"
        enabled: True  # Whether the obstacle layer is enabled. Default: true
        observation_sources: scan  # List of observation sources for the obstacle layer. Default: "pointcloud"
        scan:
          topic: /scan_filtered  # The topic name for incoming laser scans. Default: scan
          max_obstacle_height: 2.0  # Maximum obstacle height in meters. Default: 2.0
          clearing: True  # Whether to clear obstacles. Default: true
          marking: True  # Whether to mark obstacles. Default: true
          data_type: "LaserScan"  # Type of data for the observation source. Default: "LaserScan"
          raytrace_max_range: 25.0  # Maximum range for raytracing in meters. Default: 30.0
          raytrace_min_range: 0.0  # Minimum range for raytracing in meters. Default: 0.0
          obstacle_max_range: 25.0  # Maximum range for obstacle detection in meters. Default: 2.5
          obstacle_min_range: 0.0  # Minimum range for obstacle detection in meters. Default: 0.0
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"  # Plugin for the static layer. Default: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: True  # Whether to use transient local subscription for the static layer. Default: false
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"  # Plugin for the inflation layer. Default: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 3.0  # Cost scaling factor for inflation layer. Default: 10.0
        inflation_radius: 0.55  # Inflation radius in meters. Default: 0.55
      always_send_full_costmap: True  # Whether to always send the full costmap. Default: false

map_server:
  ros__parameters:
    use_sim_time: false  # Use simulation time (true) or real time (false). Default: false
    yaml_filename: ""  # Full path to the map YAML file. Default: None

map_saver:
  ros__parameters:
    use_sim_time: false  # Use simulation time (true) or real time (false). Default: false
    save_map_timeout: 5.0  # Timeout for saving the map in seconds. Default: 5.0
    free_thresh_default: 0.25  # Default threshold for free space in the map. Default: 0.25
    occupied_thresh_default: 0.65  # Default threshold for occupied space in the map. Default: 0.65
    map_subscribe_transient_local: True  # Whether to use transient local subscription for the map. Default: false

planner_server:
  ros__parameters:
    expected_planner_frequency: 40.0  # Expected frequency of the planner in Hz. Default: 20.0
    use_sim_time: false  # Use simulation time (true) or real time (false). Default: false
    planner_plugins: ["GridBased"]  # List of planner plugins. Default: ["GridBased"]
    tf_buffer_duration: 30.0  # Duration to buffer transforms in seconds. Default: 10.0
    GridBased:
      plugin: "nav2_smac_planner/SmacPlannerLattice"  # Plugin for the GridBased planner. Default: "nav2_smac_planner/SmacPlannerLattice"
      tolerance: 1.0  # Tolerance for the planner in meters. Default: 0.5
      use_astar: true  # Whether to use A* algorithm. Default: true
      allow_unknown: true  # Whether to allow planning through unknown space. Default: false

smoother_server:
  ros__parameters:
    use_sim_time: false  # Use simulation time (true) or real time (false). Default: false
    smoother_plugins: ["simple_smoother"]  # List of smoother plugins. Default: ["simple_smoother"]
    simple_smoother:
      plugin: "nav2_smoother::SimpleSmoother"  # Plugin for the simple smoother. Default: "nav2_smoother::SimpleSmoother"
      tolerance: 1.0e-10  # Tolerance for the smoother. Default: 1.0e-10
      max_its: 1000  # Maximum iterations for the smoother. Default: 1000
      do_refinement: True  # Whether to do refinement. Default: True

behavior_server:
  ros__parameters:
    costmap_topic: local_costmap/costmap_raw  # Topic name for the local costmap. Default: "local_costmap/costmap_raw"
    footprint_topic: local_costmap/published_footprint  # Topic name for the robot footprint. Default: "local_costmap/published_footprint"
    cycle_frequency: 20.0  # Frequency of the behavior server in Hz. Default: 10.0
    behavior_plugins: ["spin", "backup", "drive_on_heading", "assisted_teleop", "wait"]  # List of behavior plugins. Default: ["spin", "backup", "drive_on_heading", "assisted_teleop", "wait"]
    spin:
      plugin: "nav2_behaviors/Spin"  # Plugin for the spin behavior. Default: "nav2_behaviors/Spin"
    backup:
      plugin: "nav2_behaviors/BackUp"  # Plugin for the backup behavior. Default: "nav2_behaviors/BackUp"
    drive_on_heading:
      plugin: "nav2_behaviors/DriveOnHeading"  # Plugin for the drive on heading behavior. Default: "nav2_behaviors/DriveOnHeading"
    wait:
      plugin: "nav2_behaviors/Wait"  # Plugin for the wait behavior. Default: "nav2_behaviors/Wait"
    assisted_teleop:
      plugin: "nav2_behaviors/AssistedTeleop"  # Plugin for the assisted teleop behavior. Default: "nav2_behaviors/AssistedTeleop"
    global_frame: odom  # The frame ID of the global frame. Default: "odom"
    robot_base_frame: base_link  # The frame ID of the robot base. Default: "base_link"
    transform_tolerance: 10.0  # Transform tolerance in seconds. Default: 0.5
    use_sim_time: false  # Use simulation time (true) or real time (false). Default: false
    simulate_ahead_time: 2.0  # Time to simulate ahead in seconds. Default: 2.0
    max_rotational_vel: 1.0  # Maximum rotational velocity in radians per second. Default: 1.0
    min_rotational_vel: 0.4  # Minimum rotational velocity in radians per second. Default: 0.4
    rotational_acc_lim: 3.2  # Rotational acceleration limit in radians per second squared. Default: 3.2

robot_state_publisher:
  ros__parameters:
    use_sim_time: false  # Use simulation time (true) or real time (false). Default: false

waypoint_follower:
  ros__parameters:
    use_sim_time: false  # Use simulation time (true) or real time (false). Default: false
    loop_rate: 20  # Loop rate for the waypoint follower in Hz. Default: 20
    stop_on_failure: false # Whether to stop on failure. Default: false
    waypoint_task_executor_plugin: "wait_at_waypoint"  # Plugin for executing tasks at waypoints. Default: "wait_at_waypoint"
    wait_at_waypoint:
      plugin: "nav2_waypoint_follower::WaitAtWaypoint"  # Plugin for the wait at waypoint task. Default: "nav2_waypoint_follower::WaitAtWaypoint"
      enabled: True  # Whether the wait at waypoint task is enabled. Default: true
      waypoint_pause_duration: 200  # Pause duration at waypoints in milliseconds. Default: 0

velocity_smoother:
  ros__parameters:
    use_sim_time: false  # Use simulation time (true) or real time (false). Default: false
    smoothing_frequency: 40.0  # Frequency of the velocity smoother in Hz. Default: 20.0
    scale_velocities: False  # Whether to scale velocities. Default: false
    feedback: "OPEN_LOOP"  # Feedback type for the velocity smoother. Default: "OPEN_LOOP"
    max_velocity: [0.26, 0.0, 1.0]  # Maximum velocities for X, Y, and angular velocities. Default: [0.26, 0.0, 1.0]
    min_velocity: [-0.26, 0.0, -1.0]  # Minimum velocities for X, Y, and angular velocities. Default: [-0.26, 0.0, -1.0]
    max_accel: [2.5, 0.0, 3.2]  # Maximum accelerations for X, Y, and angular accelerations. Default: [2.5, 0.0, 3.2]
    max_decel: [-2.5, 0.0, -3.2]  # Maximum decelerations for X, Y, and angular decelerations. Default: [-2.5, 0.0, -3.2]
    odom_topic: "odom"  # Topic name for odometry messages. Default: "odom"
    odom_duration: 0.1  # Duration to keep odometry messages in seconds. Default: 0.1
    deadband_velocity: [0.0, 0.0, 0.0]  # Deadband for velocities in X, Y, and angular velocities. Default: [0.0, 0.0, 0.0]
    velocity_timeout: 1.0  # Timeout for velocity messages in seco